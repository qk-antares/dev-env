version: '3.5'
# 网络配置
networks:
  dev:
    driver: ${NETWORKS_DRIVER}

# 服务容器配置
services:
  java:
    build:
      context: ./java                  # 指定构建使用的 Dockerfile 文件
    image: java-dev:1.0
    container_name: java-dev
    environment:                         # 设置环境变量
      - TZ=${TZ}
    privileged: true
    volumes:
      - ${JAVA_CODE_PATH_HOST}:/root/workplace
      - /root/.ssh:/root/.ssh
    ports:
      - "2222:22"
      - "8001:8001"
      - "8002:8002"
      - "8003:8003"
      - "8004:8004"
      - "8005:8005"
      - "8006:8006"
      - "8007:8007"
      - "8008:8008"
      - "8009:8009"
      - "8010:8010"
      - "8011:8011"
      - "8012:8012"
      - "8013:8013"
      - "8014:8014"
      - "8015:8015"
      - "8016:8016"
      - "8017:8017"
      - "8018:8018"
      - "8019:8019"
      - "8020:8020"
    command: ["/etc/init.d/ssh", "start", "-D"]
    stdin_open: true                     # 打开标准输入，可以接受外部输入
    tty: true
    networks:
      - dev
    restart: always                      # 指定容器退出后的重启策略为始终重启

  golang:                                # 自定义容器名称
    build:
      context: ./golang                  # 指定构建使用的 Dockerfile 文件
    image: golang-dev:1.0
    container_name: golang-dev
    environment:                         # 设置环境变量
      - TZ=${TZ}
    privileged: true
    volumes:
      - ${GOLANG_CODE_PATH_HOST}:/root/workplace
      - /root/.ssh:/root/.ssh
    ports:
      - "2223:22"
      - "8021:8021"
      - "8022:8022"
      - "8023:8023"
      - "8024:8024"
      - "8025:8025"
      - "8026:8026"
      - "8027:8027"
      - "8028:8028"
      - "8029:8029"
      - "8030:8030"
      - "8031:8031"
      - "8032:8032"
      - "8033:8033"
      - "8034:8034"
      - "8035:8035"
      - "8036:8036"
      - "8037:8037"
      - "8038:8038"
      - "8039:8039"
      - "8040:8040"
    command: ["/etc/init.d/ssh", "start", "-D"]
    stdin_open: true                     # 打开标准输入，可以接受外部输入
    tty: true
    networks:
      - dev
    restart: always                      # 指定容器退出后的重启策略为始终重启
  
  mysql:
    build:
      context: ./mysql
    image: mysql-dev:1.0
    container_name: mysql-dev
    restart: always
    privileged: true
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
    ports:
      - '3306:3306'
    volumes:
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
    networks:
      - dev
